//https://adventofcode.com/2022/day/11
PART 1 SOLUTION

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;

import static java.lang.Character.isDigit;

public class Monkey {

    int inspectedTime=0;
    String old_new;
    int divisible=0;
    int ifTrueMonkey=0;
    int ifFalseMonkey=0;

    Queue<BigInteger>items;

    public Monkey(ArrayList<String> lines){
        items=new LinkedList<>();
        for(String line:lines) {
            if (lines.indexOf(line) == 2) {
                for (char ch : line.toCharArray()) {
                    old_new=line;
                }
            }
            int X = 0;
            for (char ch : line.toCharArray()) {
                if (isDigit(ch)) {
                    X *= 10;
                    X += ch-48;
                }
                if(ch==','&&lines.indexOf(line)==1){
                    items.add(BigInteger.valueOf(X));
                    X=0;
                }
            }
            if(lines.indexOf(line)==1) {
                items.add(BigInteger.valueOf(X));
            }
            if(lines.indexOf(line)==3) {
                divisible=X;
            }
            if(lines.indexOf(line)==4) {
                ifTrueMonkey=X;
            }
            if(lines.indexOf(line)==5) {
                ifFalseMonkey=X;
            }
        }
    }
}


import java.io.File;
import java.io.FileNotFoundException;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Scanner;

import static java.lang.Character.isDigit;

public class Worriedlvl {
    public void worried(File file, int Round, int warringlvl) {
        ArrayList<Monkey> Monkeys = new ArrayList<>();
        ArrayList<String> lines = new ArrayList<>();

        try {
            Scanner sc = new Scanner(file);

            while (sc.hasNextLine()) {
                String line = sc.nextLine();
                boolean newMokey = false;
                if (line.length() <= 1) {
                    newMokey = true;
                }
                if (!newMokey) {
                    lines.add(line);
                } else {
                    Monkey monkey = new Monkey(lines);
                    Monkeys.add(monkey);
                    lines.clear();
                }
            }
            Monkey monkey = new Monkey(lines);
            Monkeys.add(monkey);
            //all Monkeys have been created
            for (int r = 0; r < Round; r++) {
                for (Monkey M : Monkeys) {
                    BigInteger value = BigInteger.valueOf(0);
                    int size = M.items.size();
                    for (int k = 0; k < size; k++) {
                        if (M.items.peek() != null) {
                            value = M.items.poll();
                            System.out.println("Monkey inspects an item with a worry level of " + value);
                            M.inspectedTime++;
                        }
                        //Monkey inspects an item
                        for (char ch : M.old_new.toCharArray()) {
                            if (ch == '+' || ch == '*') {
                                int index = M.old_new.indexOf(ch);
                                int X = 0;
                                int i = 2;
                                if (isDigit(M.old_new.charAt(index + i))) {
                                    //X += M.old_new.charAt(index + 2) - 48;
                                    //System.out.println("X="+X);
                                    //i++;
                                    int length = M.old_new.length();
                                    if (index + i < length) {
                                        while (index + i < length) {
                                            X *= 10;
                                            X += M.old_new.charAt(index + i) - 48;
                                            i++;
                                        }
                                    }
                                    //System.out.println("X="+X);
                                    if (ch == '+') {
                                        value=value.add(BigInteger.valueOf(X));
                                    } else {  //ch=='*'
                                        value = value.multiply(BigInteger.valueOf(X));
                                    }
                                    System.out.println("    Worry level is multiplied by " + X + " to " + value);
                                }
                                i = 2;
                                if (!isDigit(M.old_new.charAt(index + i))) {
                                    if (ch == '+') {
                                        value=value.add(value);
                                    } else {  //ch=='*'
                                        value = value.multiply(value);

                                    }
                                }
                            }
                        }
                        //Monkey inspects an item
                        value=value.divide(BigInteger.valueOf(warringlvl));
                        System.out.println("    Monkey gets bored with item. Worry level is divided by " + warringlvl + " to " + value);
                        //Monkey gets bored with item. Worry level is divided by 3
                        if (value.remainder(BigInteger.valueOf(M.divisible)) == BigInteger.valueOf(0)) {
                            System.out.println("    Current worry level is divisible by " + M.divisible);
                            System.out.println("    Item with worry level " + value + " is thrown to monkey " + M.ifTrueMonkey);
                            Monkey tmp = Monkeys.get(M.ifTrueMonkey);
                            tmp.items.add(value);
                            Monkeys.set(M.ifTrueMonkey, tmp);
                        } else {
                            System.out.println("    Current worry level is not divisible by " + M.divisible);
                            System.out.println("    Item with worry level " + value + " is thrown to monkey " + M.ifFalseMonkey);
                            Monkey tmp = Monkeys.get(M.ifFalseMonkey);
                            tmp.items.add(value);
                            Monkeys.set(M.ifFalseMonkey, tmp);
                        }
                    }
                }
            }

            int Best = 0;
            for (Monkey A : Monkeys) {
                for (Monkey B : Monkeys) {
                    if (A != B) {
                        int sum = A.inspectedTime * B.inspectedTime;
                        if (Best < sum) {
                            Best = sum;
                        }
                    }
                }
            }

            System.out.println("[PART 1] The level of monkey business: " + Best);
        } catch (FileNotFoundException e) {
            throw new RuntimeException(e);
        }
    }

}

import java.io.File;

public class Main {
    public static void main(String[] args) {
        File file=new File("[FILE PATH]\\Test.txt");
        Worriedlvl worriedlvl=new Worriedlvl();
        worriedlvl.worried(file, 20, 3);
    }
}
