#include <stdlib.h>
#include <stdio.h>
#include <fcntl.h>

void overlapping(int* fd, int* count) {
	
	char ch;
	char As[5];		//staring section A
	char Ae[5];		//ending section A
	char Bs[5];		//starting section B
	char Be[5];		//ending section B
	int as, ae, bs, be;
	int i;

	while (read(fd, &ch, 1)) {
		As[0] = ch;
		i = 1;
		while (read(fd, &ch, 1)) {
			if (ch == '-') { As[i] = '\0'; break; }
			As[i] = ch;
			i++;
		}
		i = 0;
		while (read(fd, &ch, 1)) {
			if (ch == ',') { Ae[i] = '\0'; break; }
			Ae[i] = ch;
			i++;
		}
		i = 0;
		while (read(fd, &ch, 1)) {
			if (ch == '-') { Bs[i] = '\0'; break; }
			Bs[i] = ch;
			i++;
		}
		i = 0;
		while (read(fd, &ch, 1)) {
			if (ch == '\n') { Be[i] = '\0'; break; }
			Be[i] = ch;
			i++;
		}
		as = atoi(As);
		ae = atoi(Ae);
		bs = atoi(Bs);
		be = atoi(Be);
		//printf("Debug: %d-%d,%d-%d\n", as, ae, bs, be);

		if (as != ae || bs != be) {
			if ((as <= bs && bs <= be && be <= ae) || (bs <= as && as <= ae && ae <= be)) {
				count[0]++;
				count[1]++;
			}
			else {
				if ((as <= bs && bs <= ae && ae <= be) || (bs <= as && as <= be && be <= ae)) {
					count[1]++;
				}
			}
		}
		else {
			if ((bs <= as && ae <= be) || (as <= bs && bs <= as)) {
				count[0]++;
				count[1]++;
			}
		}
	}
}

int main(int argc, char** argv) {

	int fd;
	int res[] = {0,0};

	if (argc != 2) { printf("error: wrong number of parameters\n"); exit(1); }
	if ((fd = open(argv[1], O_RDONLY)) < 0) { printf("error: unable to open the file\n"); exit(2); }

	overlapping(fd, res);
	printf("full-overlap counter=%d\n", res[0]);
	printf("overlap counter=%d\n", res[1]);

	return 0;
}
